plugins {
    id 'java'
    id 'war'
}

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()

    // To obtain access to the Oracle Maven repository, put your credentials into environment variables:
    // - MAVEN_ORACLE_USERNAME
    // - MAVEN_ORACLE_PASSWORD
    //
    // or, create a gradle.properties in your ~/.gradle directory with the following variables set:
    // - mavenOracleUsername
    // - mavenOraclePassword
    maven {
        name 'maven.oracle.com'
        url 'https://maven.oracle.com'
        credentials {
            username = System.getenv("MAVEN_ORACLE_USERNAME") ?: mavenOracleUsername
            password = System.getenv("MAVEN_ORACLE_PASSWORD") ?: mavenOraclePassword
        }
    }

    maven {
        url = 'http://www.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/m2repo'
    }
}

group = 'org.opencadc'
sourceCompatibility = 1.8
version = '1000'

war {
    archiveName = 'tap##' + project.version + '.war'
}

configurations {
    intTestCompile.extendsFrom testCompile
    intTestRuntime.extendsFrom testRuntime
}

dependencies {
    compile 'log4j:log4j:[1.2,2.0)'

    compile 'org.opencadc:cadc-log:[1.0,)'
    compile 'org.opencadc:cadc-util:[1.2,)'
    compile 'org.opencadc:cadc-dali:[1.1,)'
    compile 'org.opencadc:cadc-uws:[1.0,)'
    compile 'org.opencadc:cadc-uws-server:[1.2,)'
    compile 'org.opencadc:cadc-tap-server:[1.1.5,)'
    compile 'org.opencadc:cadc-vosi:[1.0,)'
    compile 'org.opencadc:cadc-adql:[1.1,)'
    compile 'org.opencadc:cadc-tap-server-oracle:[1.0.0,)'

    // Switch out this to use any supported database instead of PostgreSQL.
    // ## START CUSTOM DATABASE ##
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.13'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.5'
    // ## END CUSTOM DATABASE ##

    testCompile 'junit:junit:[4.0,)'
    testCompile 'xmlunit:xmlunit:[1.0,)'

    compile 'com.google.cloud:google-cloud-storage:1.48.0'
    compile 'org.restlet.jee:org.restlet.ext.servlet:2.0.3'
    compile 'org.opencadc:cadc-tap-server:[1.1.5,)'
    compile 'org.opencadc:cadc-adql:[1.1.4,)'
    compile 'org.opencadc:cadc-access-control-identity:[1.0.7,)'

    implementation 'com.auth0:java-jwt:3.8.1'
    runtime 'org.opencadc:cadc-registry:[1.2.1,)'
}

sourceSets {
    intTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/intTest/java')
        }

        // set the intTest resource directory
        resources.srcDir file('src/intTest/resources')
    }
}

tasks.withType(Test) {
    // reset the report destinations so that intTests go to their
    // own page
    //reports.html.destination = file("${reporting.baseDir}/${name}")
    reports.html.destination = file(reporting.baseDir.getAbsolutePath() + '/' + name)

    // Assign all Java system properties from
    // the command line to the tests
    systemProperties System.properties as Map<String, ?>
}

task intTest(type: Test) {
    // set the configuration context
    testClassesDir = sourceSets.intTest.output.classesDir
    classpath = sourceSets.intTest.runtimeClasspath

    // run the tests always
    outputs.upToDateWhen { false }
}
